package org.example;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Locale;

public class GUI_interface {
    private JButton button_Solve;
    private JTextArea textArea2;
    private JTextArea textArea_Result;
    private JTextField textField_NrItems;
    private JTextArea textArea_NrItems;
    private JTextArea textArea_Title;
    private JTextArea TextArea_Seed;
    private JTextField textField_Seed;
    private JTextArea textArea_Capacity;
    private JTextField textField_Capacity;
    private JTextArea textArea_Items;
    private JPanel mainPanel;

    public static void main(String[] args) {
        JFrame frame = new JFrame("KnapsackGUI");
        frame.setContentPane(new GUI_interface().mainPanel);
        frame.setPreferredSize(new Dimension(1000, 700));
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    public GUI_interface() {
        button_Solve.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Problem problem = new Problem(Integer.valueOf(textField_NrItems.getText()), Integer.valueOf(textField_Seed.getText()));
                textArea_Items.setText(problem.toString());
                Result result = problem.Solve(Integer.valueOf(textField_Capacity.getText()));
                textArea_Result.setText(result.toString());
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridBagLayout());
        mainPanel.setBackground(new Color(-4986642));
        final JPanel spacer1 = new JPanel();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 14;
        gbc.fill = GridBagConstraints.VERTICAL;
        mainPanel.add(spacer1, gbc);
        textArea_Title = new JTextArea();
        textArea_Title.setBackground(new Color(-4986642));
        textArea_Title.setEditable(false);
        textArea_Title.setEnabled(true);
        Font textArea_TitleFont = this.$$$getFont$$$(null, Font.BOLD, 48, textArea_Title.getFont());
        if (textArea_TitleFont != null) textArea_Title.setFont(textArea_TitleFont);
        textArea_Title.setForeground(new Color(-16777216));
        textArea_Title.setText("Problem plecakowy");
        textArea_Title.setWrapStyleWord(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.gridwidth = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 0.01;
        gbc.fill = GridBagConstraints.VERTICAL;
        mainPanel.add(textArea_Title, gbc);
        textArea2 = new JTextArea();
        gbc = new GridBagConstraints();
        gbc.gridx = 7;
        gbc.gridy = 1;
        gbc.gridheight = 5;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(textArea2, gbc);
        textArea_Result = new JTextArea();
        textArea_Result.setBackground(new Color(-458753));
        textArea_Result.setEditable(false);
        textArea_Result.setForeground(new Color(-16777216));
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 1;
        gbc.gridheight = 13;
        gbc.weightx = 0.9;
        gbc.weighty = 0.8;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(textArea_Result, gbc);
        textField_NrItems = new JTextField();
        textField_NrItems.setBackground(new Color(-1));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.weightx = 0.4;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(textField_NrItems, gbc);
        textArea_NrItems = new JTextArea();
        textArea_NrItems.setBackground(new Color(-4986642));
        textArea_NrItems.setEditable(false);
        Font textArea_NrItemsFont = this.$$$getFont$$$(null, Font.BOLD, 16, textArea_NrItems.getFont());
        if (textArea_NrItemsFont != null) textArea_NrItems.setFont(textArea_NrItemsFont);
        textArea_NrItems.setForeground(new Color(-16777216));
        textArea_NrItems.setText("Podaj liczbe przedmiotów");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.weightx = 0.4;
        gbc.fill = GridBagConstraints.VERTICAL;
        mainPanel.add(textArea_NrItems, gbc);
        TextArea_Seed = new JTextArea();
        TextArea_Seed.setBackground(new Color(-4986642));
        TextArea_Seed.setEditable(false);
        Font TextArea_SeedFont = this.$$$getFont$$$(null, Font.BOLD, 16, TextArea_Seed.getFont());
        if (TextArea_SeedFont != null) TextArea_Seed.setFont(TextArea_SeedFont);
        TextArea_Seed.setForeground(new Color(-16777216));
        TextArea_Seed.setText("Podaj ziarno");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.weightx = 0.4;
        gbc.fill = GridBagConstraints.VERTICAL;
        mainPanel.add(TextArea_Seed, gbc);
        textField_Seed = new JTextField();
        textField_Seed.setBackground(new Color(-1));
        textField_Seed.setForeground(new Color(-16777216));
        textField_Seed.setToolTipText("ziarno");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 5;
        gbc.weightx = 0.4;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(textField_Seed, gbc);
        textArea_Capacity = new JTextArea();
        textArea_Capacity.setBackground(new Color(-4986642));
        textArea_Capacity.setEditable(false);
        Font textArea_CapacityFont = this.$$$getFont$$$(null, Font.BOLD, 16, textArea_Capacity.getFont());
        if (textArea_CapacityFont != null) textArea_Capacity.setFont(textArea_CapacityFont);
        textArea_Capacity.setForeground(new Color(-16777216));
        textArea_Capacity.setText("Podaj pojemnośc plecaka");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 6;
        gbc.weightx = 0.4;
        gbc.fill = GridBagConstraints.VERTICAL;
        mainPanel.add(textArea_Capacity, gbc);
        textField_Capacity = new JTextField();
        textField_Capacity.setBackground(new Color(-1));
        textField_Capacity.setForeground(new Color(-16777216));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 7;
        gbc.weightx = 0.4;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(textField_Capacity, gbc);
        button_Solve = new JButton();
        button_Solve.setBackground(new Color(-13797671));
        Font button_SolveFont = this.$$$getFont$$$(null, Font.BOLD, 16, button_Solve.getFont());
        if (button_SolveFont != null) button_Solve.setFont(button_SolveFont);
        button_Solve.setForeground(new Color(-1));
        button_Solve.setText("Policz");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 8;
        gbc.weightx = 0.3;
        gbc.weighty = 0.1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(button_Solve, gbc);
        textArea_Items = new JTextArea();
        textArea_Items.setBackground(new Color(-1));
        textArea_Items.setEditable(false);
        textArea_Items.setForeground(new Color(-16777216));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 9;
        gbc.gridheight = 5;
        gbc.weightx = 0.4;
        gbc.weighty = 0.5;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(textArea_Items, gbc);
        final JSeparator separator1 = new JSeparator();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 13;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(separator1, gbc);
        final JSeparator separator2 = new JSeparator();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 8;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(separator2, gbc);
        final JSeparator separator3 = new JSeparator();
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 13;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(separator3, gbc);
        final JScrollPane scrollPane1 = new JScrollPane();
        scrollPane1.setBackground(new Color(-13797671));
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 1;
        gbc.gridheight = 13;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(scrollPane1, gbc);
        final JScrollPane scrollPane2 = new JScrollPane();
        scrollPane2.setBackground(new Color(-13797671));
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 9;
        gbc.gridheight = 5;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(scrollPane2, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
